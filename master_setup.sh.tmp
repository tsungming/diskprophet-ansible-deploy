#!/usr/bin/env bash

function install_app_online_ubuntu_xenial() {
    cat /etc/apt/sources.list.d/influxdb.list | grep xenial &>/dev/null
    [ ! $? -eq 0 ] && {
        curl -sL https://repos.influxdata.com/influxdb.key | sudo apt-key add -
        source /etc/lsb-release
        echo "deb https://repos.influxdata.com/${DISTRIB_ID,,} ${DISTRIB_CODENAME} stable" | sudo tee /etc/apt/sources.list.d/influxdb.list
    }

    which influx &>/dev/null
    [ ! $? -eq 0 ] && {
        echo "Install influx  ..."
        sudo apt-get update && sudo apt-get install -y influxdb
        sudo systemctl enable influxdb
    }
    sudo systemctl restart influxdb
    influx -execute 'CREATE DATABASE telegraf'
    influx -execute 'CREATE RETENTION POLICY one_day ON telegraf DURATION 1d REPLICATION 1'

    which java &>/dev/null
    [ ! $? -eq 0 ] && {
        echo "Install java  ..."
        sudo apt-get update
        sudo apt-get install -y default-jre
    }

}

function retry {
    description=$1
    cmd=$2; timeout=${3:-5}; maxTries=${4:-3}; interval=${5:-3}
    tries=1

    echo "$description"
    until timeout $timeout $cmd &>/dev/null
    do
        if (( tries == maxTries ))
        then
            echo "Attempt $tries/$maxTries failed and there are no more attempts left!"
            return 1
        else
            echo "Attempt $tries/$maxTries failed! Trying again in $interval seconds..."
            sleep $interval
            ((tries++))
        fi
    done
}

# Refresh ARP
sudo arp -d SERVER_NODE_DNS &>/dev/null
ping -c 3 SERVER_NODE_DNS &>/dev/null

install_app_online_ubuntu_xenial

cat /lib/systemd/system/diskprophet-master.service | grep Install &>/dev/null
[ ! $? -eq 0 ] && {
    cd /home/ubuntu/diskprophet-master
    chmod 664 diskprophet-master.service
    currentPath=$(pwd)
    sed -i "s@WorkingDirectory.*@WorkingDirectory=${currentPath}@g" diskprophet-master.service
    yes | sudo cp diskprophet-master.service /lib/systemd/system
    sudo ln -s /lib/systemd/system/diskprophet-master.service /etc/systemd/system/multi-user.target.wants/diskprophet-master.service &>/dev/null
    sudo systemctl daemon-reload &>/dev/null
    sudo systemctl reload diskprophet-master &>/dev/null
}
sudo systemctl stop diskprophet-master

# Check the listen port and diskprophet-server connection

netstat -lnt | awk '$6 == "LISTEN"' | grep 8086 &>/dev/null
[ ! $? -eq 0 ] && {
    echo "Failed to check influxdb port (8086)"
    exit 1
}

retry "Trying to connect to Influxdb" "curl -sl -I SERVER_NODE_DNS:8086/ping"

exit 0